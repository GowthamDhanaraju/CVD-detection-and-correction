version: '3.8'

services:
  # Backend API Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: cvd-backend
    ports:
      - "8001:8000"
    environment:
      - HOST=0.0.0.0
      - PORT=8000
      - LOG_LEVEL=INFO
      - REDIS_URL=redis://redis:6379
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    volumes:
      - ./backend/data:/app/data
      - ./backend/models:/app/models
      - ./backend/test_images:/app/test_images
      - backend_uploads:/app/uploads
    depends_on:
      - redis
    networks:
      - cvd-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Web Service
  frontend:
    build:
      context: ./mobile-app
      dockerfile: Dockerfile
    container_name: cvd-frontend
    ports:
      - "8082:8080"
    environment:
      - EXPO_DEVTOOLS_LISTEN_ADDRESS=0.0.0.0
      - REACT_APP_API_URL=http://localhost:8001
    volumes:
      - ./mobile-app/src:/app/src
      - ./mobile-app/assets:/app/assets
    depends_on:
      - backend
    networks:
      - cvd-network
    restart: unless-stopped

  # Redis Service (for caching and session management)
  redis:
    image: redis:7-alpine
    container_name: cvd-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - cvd-network
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Kafka Service (for message queuing)
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: cvd-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - cvd-network
    restart: unless-stopped

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: cvd-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_LOG_RETENTION_HOURS: 168
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - cvd-network
    restart: unless-stopped

networks:
  cvd-network:
    driver: bridge

volumes:
  redis_data:
    driver: local
  kafka_data:
    driver: local
  backend_uploads:
    driver: local
version: '3.8'

services:
  # Nginx Reverse Proxy (Production)
  nginx:
    image: nginx:alpine
    container_name: cvd-nginx-prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - frontend
    networks:
      - cvd-network
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Backend API Service (Production)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: cvd-backend-prod
    expose:
      - "8001"
    environment:
      - HOST=0.0.0.0
      - PORT=8001
      - LOG_LEVEL=INFO
      - PYTHONUNBUFFERED=1
      - REDIS_URL=redis://redis:6379
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SECRET_KEY=${SECRET_KEY:-cvd-production-secret-key-2024}
      - ACCESS_TOKEN_EXPIRE_MINUTES=60
    volumes:
      - ./backend/data:/app/data
      - ./models:/app/models:ro
      - backend_uploads:/app/uploads
    depends_on:
      - redis
      - kafka
    networks:
      - cvd-network
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 400M
        reservations:
          cpus: '0.1'
          memory: 200M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Frontend Web Service (Production)
  frontend:
    build:
      context: ./mobile-app
      dockerfile: Dockerfile
    container_name: cvd-frontend-prod
    expose:
      - "8080"
    environment:
      - NODE_ENV=production
      - EXPO_DEVTOOLS_LISTEN_ADDRESS=0.0.0.0
      - REACT_APP_API_URL=/api
    depends_on:
      - backend
    networks:
      - cvd-network
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.05'
          memory: 256M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Redis Service (Production)
  redis:
    image: redis:7-alpine
    container_name: cvd-redis-prod
    expose:
      - "6379"
    volumes:
      - redis_data:/data
    networks:
      - cvd-network
    restart: always
    command: redis-server --appendonly yes --maxmemory 128mb --maxmemory-policy allkeys-lru
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 256M
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

  # Kafka Services (Production)
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: cvd-zookeeper-prod
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_HEAP_OPTS: "-Xmx128m -Xms128m"
    networks:
      - cvd-network
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 512M
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_logs:/var/lib/zookeeper/log
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: cvd-kafka-prod
    depends_on:
      - zookeeper
    expose:
      - "9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_HEAP_OPTS: "-Xmx256m -Xms256m"
      KAFKA_LOG_RETENTION_HOURS: 168
      KAFKA_LOG_SEGMENT_BYTES: 1073741824
      KAFKA_LOG_RETENTION_BYTES: 1073741824
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - cvd-network
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.02'
          memory: 256M
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 120s
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

networks:
  cvd-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  redis_data:
    driver: local
  kafka_data:
    driver: local
  zookeeper_data:
    driver: local
  zookeeper_logs:
    driver: local
  backend_uploads:
    driver: local
# Build stage
FROM node:18-alpine AS builder

WORKDIR /app

# Copy package files
COPY package.micro.json package.json
COPY yarn.lock* package-lock.json* ./

# Install dependencies
RUN npm install

# Copy source code
COPY . .
COPY App.micro.tsx App.tsx
COPY index.micro.ts index.ts

# Build the app for web
RUN npx expo export --platform web

# Production stage
FROM nginx:alpine

# Copy built app
COPY --from=builder /app/dist /usr/share/nginx/html

# Create nginx config
RUN echo 'server { \
    listen 8080; \
    root /usr/share/nginx/html; \
    index index.html; \
    location / { \
        try_files $uri $uri/ /index.html; \
    } \
    location /api/ { \
        proxy_pass http://backend:8001/; \
        proxy_set_header Host $host; \
        proxy_set_header X-Real-IP $remote_addr; \
    } \
}' > /etc/nginx/conf.d/default.conf

EXPOSE 8080

# Health check
HEALTHCHECK --interval=60s --timeout=15s --start-period=30s --retries=2 \
    CMD curl -f http://localhost:8080 || exit 1

CMD ["nginx", "-g", "daemon off;"]